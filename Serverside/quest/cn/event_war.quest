------------------------
-- 帝国战争 By TMP4 --
------------------------
quest event_war begin
	state start begin
		function war_settings()
			return
			{
				["a_cords"]={["x"] = 1342700, ["y"]= 33800,}, -- 红方坐标
				["b_cords"] = { ["x"] = 1393000, ["y"] = 33900, }, -- 黄方坐标
				["c_cords"] = { ["x"] = 1368000, ["y"] = 66300,}, -- 蓝方坐标
				["gm_cords"] = { ["x"] = 1367600, ["y"] = 38200, }, -- GM坐标
				["war_map_index"] = 201 -- 战场地图索引
			}
		end
		function war_start(war_state, looser_reward, min_level, max_attender, required_kill)
			game.set_event_flag("birodalmi_war", war_state) -- 启动帝国战争
			game.set_event_flag("birodalmi_war_win", 0) -- 设置赢家帝国
			game.set_event_flag("birodalmi_war_los", looser_reward) -- 失败帝国是否可以留下奖励
			game.set_event_flag("birodalmi_war_lvl", min_level) -- 最低等级
			game.set_event_flag("birodalmi_war_max", max_attender) -- 每个帝国的最大参与人数
			game.set_event_flag("birodalmi_war_a_n", 0) -- 红方参与人数
			game.set_event_flag("birodalmi_war_b_n", 0) -- 黄方参与人数
			game.set_event_flag("birodalmi_war_c_n", 0) -- 蓝方参与人数
			game.set_event_flag("birodalmi_war_kill", required_kill) -- 胜利所需的击杀数
			game.set_event_flag("birodalmi_war_shin", 0) -- 红方击杀数
			game.set_event_flag("birodalmi_war_chun", 0) -- 黄方击杀数
			game.set_event_flag("birodalmi_war_jinn", 0) -- 蓝方击杀数
		end
		
		function war_winner()
			return game.get_event_flag("birodalmi_war_win") -- 获取获胜方
		end
		function war_set_winner(empireNum)
			game.set_event_flag("birodalmi_war_win", empireNum) -- 设置获胜方
		end
		function war_min_level()
			return game.get_event_flag("birodalmi_war_lvl") -- 获取最小等级
		end
		function is_war_running()
			if game.get_event_flag("birodalmi_war") > 0 then
				return true -- 如果战争正在进行中，返回真
			else
				return false -- 否则返回假
			end
		end
		function is_looser_reward()
			if game.get_event_flag("birodalmi_war_los") > 0 then
				return true -- 如果失败者可以获得奖励，返回真
			else
				return false -- 否则返回假
			end
		end
		function war_max_attender()
			return game.get_event_flag("birodalmi_war_max") -- 获取每个帝国的最大参与人数
		end
		function war_red_attender()
			return game.get_event_flag("birodalmi_war_a_n") -- 获取红方参与人数
		end
		function war_yellow_attender()
			return game.get_event_flag("birodalmi_war_b_n") -- 获取黄方参与人数
		end
		function war_blue_attender()
			return game.get_event_flag("birodalmi_war_c_n") -- 获取蓝方参与人数
		end
		function war_set_attender(empireNum)
			if empireNum == 1 then
				game.set_event_flag("birodalmi_war_a_n", event_war.war_red_attender() + 1) -- 增加红方参与人数
			elseif empireNum == 2 then
				game.set_event_flag("birodalmi_war_b_n", event_war.war_yellow_attender() + 1) -- 增加黄方参与人数
			else
				game.set_event_flag("birodalmi_war_c_n", event_war.war_blue_attender() + 1) -- 增加蓝方参与人数
			end
		end
		function war_required_kill()
			return game.get_event_flag("birodalmi_war_kill") -- 获取胜利所需的击杀数
		end
		function war_red_kill()
			return game.get_event_flag("birodalmi_war_shin") -- 获取红方击杀数
		end
		function war_yellow_kill()
			return game.get_event_flag("birodalmi_war_chun") -- 获取黄方击杀数
		end
		function war_blue_kill()
			return game.get_event_flag("birodalmi_war_jinn") -- 获取蓝方击杀数
		end
		function war_set_kill(empireNum)
			if empireNum == 1 then
				game.set_event_flag("birodalmi_war_shin", event_war.war_red_kill() + 1) -- 设置红方击杀数
			elseif empireNum == 2 then
				game.set_event_flag("birodalmi_war_chun", event_war.war_yellow_kill() + 1) -- 设置黄方击杀数
			else
				game.set_event_flag("birodalmi_war_jinn", event_war.war_blue_kill() + 1) -- 设置蓝方击杀数
			end
		end
		function war_current_kill(empireNum)
			if empireNum == 1 then
				return game.get_event_flag("birodalmi_war_shin") -- 获取红方当前击杀数
			elseif empireNum == 2 then
				return game.get_event_flag("birodalmi_war_chun") -- 获取黄方当前击杀数
			else
				return game.get_event_flag("birodalmi_war_jinn") -- 获取蓝方当前击杀数
			end
		end
		function war_flags_nullaz()
			game.set_event_flag("birodalmi_war", 0) -- 重置帝国战争
			game.set_event_flag("birodalmi_war_win", 0) -- 重置获胜方
			game.set_event_flag("birodalmi_war_los", 0) -- 重置失败者奖励
			game.set_event_flag("birodalmi_war_lvl", 0) -- 重置最低等级
			game.set_event_flag("birodalmi_war_max", 0) -- 重置最大参与人数
			game.set_event_flag("birodalmi_war_a_n", 0) -- 重置红方参与人数
			game.set_event_flag("birodalmi_war_b_n", 0) -- 重置黄方参与人数
			game.set_event_flag("birodalmi_war_c_n", 0) -- 重置蓝方参与人数
			game.set_event_flag("birodalmi_war_kill", 0) -- 重置胜利所需击杀数
			game.set_event_flag("birodalmi_war_shin", 0) -- 重置红方击杀数
			game.set_event_flag("birodalmi_war_chun", 0) -- 重置黄方击杀数
			game.set_event_flag("birodalmi_war_jinn", 0) -- 重置蓝方击杀数
		end
		when letter begin
			if pc.is_gm() then
				send_letter("GM: 帝国战争")
			elseif pc.get_map_index() == event_war.war_settings().war_map_index and event_war.is_war_running() then
				send_letter("帝国战争")
			end
		end
		when button or info begin
			if pc.is_gm() then
				if not event_war.is_war_running() then
					say_title("帝国战争:")
					say("")
					say_reward("当前帝国战争未开启，是否要开始？")
					say("")
					local s1 = select ("是","否")
					if s1 == 2 then
						send_letter("GM: 帝国战争")
						return
					else
						say_title("帝国战争:")
						say("")
						say_reward("最低等级是多少？")
						local minLvlToJoin = input()
						if minLvlToJoin == "" or not tonumber(minLvlToJoin) then
							minLvlToJoin = 75
						end
						say_title("帝国战争:")
						say("")
						say_reward("每个帝国最多可以有多少参与者？")
						local maxAttender = input()
						if maxAttender == "" or not tonumber(maxAttender) or maxAttender < 5 then
							maxAttender = 50
						end
						say_title("帝国战争:")
						say("")
						say_reward("获得胜利需要多少击杀数？")
						local requiredKill = input()
						if requiredKill == "" or not tonumber(requiredKill) then
							requiredKill = 30
						end
						event_war.war_start(1, 1, tonumber(minLvlToJoin), tonumber(maxAttender), tonumber(requiredKill))
					end
				end
			end
		end
	end
end
